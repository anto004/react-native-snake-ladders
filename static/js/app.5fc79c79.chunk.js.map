{"version":3,"sources":["reducers/index.js","actions/index.js","components/Player.js","components/Grid.js","components/Dice.js","components/Players.js","components/Header.js","components/Timer.js","components/Game.js","utils/random.js","App.js","web-build/register-service-worker.js"],"names":["initialState","id","RED","GREEN","BLUE","YELLOW","game","state","action","direction","row","col","player","fromPosition","toPosition","newPosition","oldPosition","type","map","rows","cell","column","obj","styles","StyleSheet","create","playerStyle","height","width","borderRadius","margin","Player","color","View","style","backgroundColor","RenderPlayers","Object","entries","key","Row","rowStyle","index","Cell","cellContainer","cellPlayerContainer","cellIdStyle","h4","textIdStyle","gridContainer","marginTop","marginRight","marginLeft","flexDirection","alignItems","justifyContent","flex","borderWidth","connect","grid","dispatch","buttonStyle","textStyle","fontWeight","fontSize","iconStyle","Dice","dice","rollDice","title","toString","raised","onPress","titleStyle","FontAwesome5","name","size","PlayerWithArrow","playersTurn","playersContainer","padding","Players","players","SCREEN_WIDTH","Dimensions","get","headerContainer","marginBottom","paddingTop","Header","onStart","onReset","timerContainer","timerStyle","Timer","seconds","PLAYER_COLORS","Game","props","onChangePlayerNumbers","n","copy","gameOnGoing","Number","isNaN","setState","numberPlayers","i","position","push","max","gameOver","random","Math","floor","ToastAndroid","show","SHORT","moveCurrentPlayer","currentPlayerIndex","dispatchMovePlayer","currentPlayerObj","dispatchMovePlayerToStart","getCurrentPlayer","currentPlayer","winner","timer","clearInterval","setCurrentPlayer","setInterval","dispatchResetPlayers","this","length","prevProps","prevState","gameContainer","numberPlayersContainer","numberPlayerTextStyle","TextInput","inputStyle","value","onChangeText","text","bottomContainer","winnerTextStyle","toUpperCase","Component","textAlign","data","movePlayerToStart","movePlayer","App","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","container","StatusBar","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.5fc79c79.chunk.js","sourcesContent":["import {\n\tMOVE_PLAYER,\n\tMOVE_PLAYER_TO_START,\n\tRESET_PLAYERS,\n} from \"../actions/index\";\n\nexport const RED = \"red\";\nexport const GREEN = \"green\";\nexport const BLUE = \"blue\";\nexport const YELLOW = \"yellow\";\n\nconst initialState = [\n\t[\n\t\t{ id: 15, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 14, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 13, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 12, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t],\n\t[\n\t\t{ id: 11, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 10, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 9, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 8, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t],\n\t[\n\t\t{ id: 7, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 6, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 5, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 4, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t],\n\t[\n\t\t{ id: 0, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 1, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 2, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t\t{ id: 3, RED: false, GREEN: false, BLUE: false, YELLOW: false },\n\t],\n];\n\nconst game = (state = initialState, action) => {\n\t// Move player from last row to 1st row in 1 2 3 4 5  ... sequence\n\tconst direction = [\n\t\t{ row: 3, col: 0 },\n\t\t{ row: 3, col: 1 },\n\t\t{ row: 3, col: 2 },\n\t\t{ row: 3, col: 3 },\n\n\t\t{ row: 2, col: 3 },\n\t\t{ row: 2, col: 2 },\n\t\t{ row: 2, col: 1 },\n\t\t{ row: 2, col: 0 },\n\n\t\t{ row: 1, col: 3 },\n\t\t{ row: 1, col: 2 },\n\t\t{ row: 1, col: 1 },\n\t\t{ row: 1, col: 0 },\n\n\t\t{ row: 0, col: 3 },\n\t\t{ row: 0, col: 2 },\n\t\t{ row: 0, col: 1 },\n\t\t{ row: 0, col: 0 },\n\t];\n\n\tconst { player, fromPosition, toPosition } = action;\n\tconst newPosition = direction[toPosition];\n\tconst oldPosition = direction[fromPosition];\n\n\tswitch (action.type) {\n\t\tcase MOVE_PLAYER:\n\t\t\tstate[newPosition.row][newPosition.col] = {\n\t\t\t\t...state[newPosition.row][newPosition.col],\n\t\t\t\t[player]: true,\n\t\t\t};\n\n\t\t\tstate[oldPosition.row][oldPosition.col] = {\n\t\t\t\t...state[oldPosition.row][oldPosition.col],\n\t\t\t\t[player]: false,\n\t\t\t};\n\n\t\t\treturn [...state];\n\n\t\tcase MOVE_PLAYER_TO_START:\n\t\t\tstate[newPosition.row][newPosition.col] = {\n\t\t\t\t...state[newPosition.row][newPosition.col],\n\t\t\t\t[player]: true,\n\t\t\t};\n\n\t\t\treturn [...state];\n\n\t\tcase RESET_PLAYERS:\n\t\t\treturn state.map((rows, row) =>\n\t\t\t\trows.map((cell, column) => {\n\t\t\t\t\tconst obj = state[row][column];\n\t\t\t\t\tobj[RED] = false;\n\t\t\t\t\tobj[GREEN] = false;\n\t\t\t\t\tobj[BLUE] = false;\n\t\t\t\t\tobj[YELLOW] = false;\n\t\t\t\t\treturn obj;\n\t\t\t\t})\n\t\t\t);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default game;\n","export const MOVE_PLAYER = \"move_player\";\nexport const MOVE_PLAYER_TO_START = \"move_player_to_start\";\nexport const RESET_PLAYERS = \"reset_players\";\n\n// Arguments fromPosition and toPosition\n// toPosition is the sum of the fromPosition and the dice output\nexport const movePlayer = (player, fromPosition, toPosition) => ({\n\ttype: MOVE_PLAYER,\n\tplayer,\n\tfromPosition,\n\ttoPosition,\n});\n\nexport const movePlayerToStart = (player, fromPosition, toPosition) => ({\n\ttype: MOVE_PLAYER_TO_START,\n\tplayer,\n\tfromPosition,\n\ttoPosition,\n});\n\nexport const resetPlayers = () => ({\n\ttype: RESET_PLAYERS,\n});\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\n\nfunction Player({ color }) {\n\treturn <View style={[styles.playerStyle, { backgroundColor: color }]}></View>;\n}\n\nconst styles = StyleSheet.create({\n\tplayerStyle: {\n\t\theight: 13.5,\n\t\twidth: 15,\n\t\tborderRadius: 30,\n\t\tmargin: 1,\n\t},\n});\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Text } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport Player from \"./Player\";\nimport { RED, GREEN, BLUE, YELLOW } from \"../reducers/index\";\n\nfunction RenderPlayers({ column }) {\n\tconst players = Object.entries(column).map(([key, value]) => {\n\t\tif (key === RED && column[key]) {\n\t\t\treturn <Player key={key} color=\"red\" />;\n\t\t}\n\t\tif (key === GREEN && column[key]) {\n\t\t\treturn <Player key={key} color={GREEN} />;\n\t\t}\n\t\tif (key === BLUE && column[key]) {\n\t\t\treturn <Player key={key} color={BLUE} />;\n\t\t}\n\t\tif (key === YELLOW && column[key]) {\n\t\t\treturn <Player key={key} color={YELLOW} />;\n\t\t}\n\t});\n\treturn players;\n}\n\nfunction Row({ row }) {\n\treturn (\n\t\t<View style={styles.rowStyle}>\n\t\t\t{row.map((column, index) => (\n\t\t\t\t<Cell key={column.id} column={column} />\n\t\t\t))}\n\t\t</View>\n\t);\n}\n\nfunction Cell({ column }) {\n\treturn (\n\t\t<View key={column.id} style={styles.cellContainer}>\n\t\t\t<View style={styles.cellPlayerContainer}>\n\t\t\t\t<RenderPlayers column={column} />\n\t\t\t</View>\n\t\t\t<View style={styles.cellIdStyle}>\n\t\t\t\t{column.id === 0 && <Text h4>Start</Text>}\n\t\t\t\t{column.id === 15 && <Text h4>Win</Text>}\n\t\t\t\t{column.id !== 0 && column.id !== 15 && (\n\t\t\t\t\t<Text h4 style={styles.textIdStyle}>\n\t\t\t\t\t\t{column.id}\n\t\t\t\t\t</Text>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nfunction Grid({ grid }) {\n\treturn (\n\t\t<View style={styles.gridContainer}>\n\t\t\t{grid.map((row, index) => (\n\t\t\t\t<Row key={index} row={row} />\n\t\t\t))}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tgridContainer: {\n\t\twidth: 300,\n\t\tmarginTop: 5,\n\t\tmarginRight: 10,\n\t\tmarginLeft: 10,\n\t\tbackgroundColor: \"white\",\n\t},\n\trowStyle: {\n\t\t// flex: 1,\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"space-around\",\n\t},\n\tcellContainer: {\n\t\tflex: 1,\n\t\theight: 60,\n\t\tborderWidth: 1,\n\t},\n\tcellPlayerContainer: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n\tcellIdStyle: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tmargin: 4,\n\t},\n\ttextIdStyle: {\n\t\tmargin: 0,\n\t},\n});\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tgrid: state,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { Button } from \"react-native-elements\";\n\nfunction Dice({ dice, rollDice }) {\n\treturn (\n\t\t<View>\n\t\t\t<Button\n\t\t\t\ttitle={dice.toString()}\n\t\t\t\ttype=\"outline\"\n\t\t\t\traised={true}\n\t\t\t\tonPress={rollDice}\n\t\t\t\tbuttonStyle={styles.buttonStyle}\n\t\t\t\ttitleStyle={styles.textStyle}\n\t\t\t/>\n\t\t\t<FontAwesome5\n\t\t\t\tname=\"dice\"\n\t\t\t\tsize={24}\n\t\t\t\tcolor=\"black\"\n\t\t\t\tstyle={styles.iconStyle}\n\t\t\t/>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tbuttonStyle: {\n\t\twidth: 50,\n\t\theight: 50,\n\t\tmargin: 0,\n\t},\n\ttextStyle: {\n\t\tfontWeight: \"bold\",\n\t\tfontSize: 25,\n\t},\n\ticonStyle: {\n\t\tmargin: 6,\n\t},\n});\n\nexport default Dice;\n","import React, { Component } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Player from \"./Player\";\n\nfunction PlayerWithArrow({ color, playersTurn }) {\n\treturn (\n\t\t<View style={styles.playerStyle}>\n\t\t\t<Player color={color} />\n\t\t\t{playersTurn === color && (\n\t\t\t\t<View style={styles.iconStyle}>\n\t\t\t\t\t<FontAwesome5 name=\"arrow-up\" size={20} color=\"black\" />\n\t\t\t\t</View>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n// Pass an array of players\n// playerColors [\"red\", \"green\", \"blue\", \"yellow\"];\nfunction Players({ players, playersTurn }) {\n\treturn (\n\t\t<View style={styles.playersContainer}>\n\t\t\t{players[0] && <PlayerWithArrow color=\"red\" playersTurn={playersTurn} />}\n\t\t\t{players[1] && (\n\t\t\t\t<PlayerWithArrow color=\"green\" playersTurn={playersTurn} />\n\t\t\t)}\n\t\t\t{players[2] && <PlayerWithArrow color=\"blue\" playersTurn={playersTurn} />}\n\t\t\t{players[3] && (\n\t\t\t\t<PlayerWithArrow color=\"yellow\" playersTurn={playersTurn} />\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tplayersContainer: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"center\",\n\t\tpadding: 10,\n\t},\n\tplayerStyle: {\n\t\tjustifyContent: \"flex-start\",\n\t\talignItems: \"center\",\n\t\tpadding: 2,\n\t},\n\ticonStyle: {\n\t\tpadding: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n});\n\nexport default Players;\n","import React, { Component } from \"react\";\nimport { View, StyleSheet, Dimensions } from \"react-native\";\nimport { Button, Text } from \"react-native-elements\";\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nfunction Header({ onStart, onReset }) {\n\treturn (\n\t\t<View style={styles.headerContainer}>\n\t\t\t<Button type=\"outline\" raised={true} title=\"Reset\" onPress={onReset} />\n\t\t\t<Text h4> Snake and Ladders </Text>\n\t\t\t<Button type=\"outline\" raised={true} title=\"Start\" onPress={onStart} />\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\theaderContainer: {\n\t\tflexDirection: \"row\",\n\t\twidth: SCREEN_WIDTH,\n\t\tmarginTop: 10,\n\t\tmarginBottom: 15,\n\t\tpaddingTop: 30,\n\t\tjustifyContent: \"center\",\n\t},\n});\n\nexport default Header;\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Text } from \"react-native-elements\";\n\nfunction Timer({ seconds }) {\n\treturn (\n\t\t<View style={styles.timerContainer}>\n\t\t\t<View style={styles.timerStyle}>\n\t\t\t\t<Text>{seconds}</Text>\n\t\t\t</View>\n\t\t\t<Text> Timer </Text>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\ttimerContainer: {\n\t\tmargin: 0,\n\t\tjustifyContent: \"space-evenly\",\n\t\talignItems: \"center\",\n\t},\n\ttimerStyle: {\n\t\twidth: 50,\n\t\theight: 50,\n\t\tborderWidth: 1,\n\t\tborderRadius: 50,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n});\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport {\n\tView,\n\tStyleSheet,\n\tDimensions,\n\tTextInput,\n\tToastAndroid,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Text } from \"react-native-elements\";\nimport timer from \"react-native-timer\";\nimport Grid from \"./Grid\";\nimport Dice from \"./Dice\";\nimport Players from \"./Players\";\nimport Header from \"./Header\";\nimport Timer from \"./Timer\";\nimport { movePlayer, movePlayerToStart, resetPlayers } from \"../actions\";\nimport { getRandomInt } from \"../utils/random\";\nimport { RED } from \"../reducers\";\n\nconst DICE_MAX = 3;\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst PLAYER_COLORS = [\"red\", \"green\", \"blue\", \"yellow\"];\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdice: 3,\n\t\t\tnumberPlayers: 2,\n\t\t\twinner: \"\",\n\t\t\tplayers: [\n\t\t\t\t{ player: \"red\", position: 0 },\n\t\t\t\t{ player: \"green\", position: 0 },\n\t\t\t],\n\t\t\tcurrentPlayerIndex: 0,\n\t\t\tplayersTurn: \"\",\n\t\t\tseconds: 5,\n\t\t\tgameOnGoing: false,\n\t\t\tgameOver: false,\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\ttimer.clearInterval(this);\n\t}\n\n\tonChangePlayerNumbers = (n) => {\n\t\tconst { gameOnGoing } = this.state;\n\t\tconst copy = [];\n\n\t\tif (gameOnGoing) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Number.isNaN(Number(n)) && Number(n) < 5) {\n\t\t\tthis.setState({ numberPlayers: n });\n\n\t\t\t// Save players to state by color and position 0\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tconst player = {\n\t\t\t\t\tplayer: PLAYER_COLORS[i],\n\t\t\t\t\tposition: 0,\n\t\t\t\t};\n\t\t\t\tcopy.push(player);\n\t\t\t}\n\t\t\tthis.setState({ players: copy });\n\t\t}\n\t};\n\n\trollDice = () => {\n\t\tconst { gameOnGoing, gameOver } = this.state;\n\t\tconst random = getRandomInt(DICE_MAX);\n\t\tthis.setState({ dice: random });\n\n\t\tif (!gameOnGoing) {\n\t\t\tToastAndroid.show(\"Press start\", ToastAndroid.SHORT);\n\t\t\treturn;\n\t\t}\n\n\t\tif (gameOver) {\n\t\t\tToastAndroid.show(\n\t\t\t\t\"Game Over! Reset and Start New Game\",\n\t\t\t\tToastAndroid.SHORT\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.moveCurrentPlayer(random);\n\n\t\t// Reset clock\n\t\tthis.setState({ seconds: 5 });\n\t};\n\n\tmoveCurrentPlayer = (dice) => {\n\t\tconst { players, currentPlayerIndex } = this.state;\n\t\tconst { dispatchMovePlayer, dispatchMovePlayerToStart } = this.props;\n\n\t\tconst currentPlayerObj = this.getCurrentPlayer();\n\t\tconst currentPlayer = currentPlayerObj.player;\n\t\tconst fromPosition = currentPlayerObj.position;\n\t\tconst toPosition = fromPosition + dice;\n\n\t\tif (toPosition > 15) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We have a winner\n\t\tif (toPosition === 15) {\n\t\t\tthis.setState({\n\t\t\t\twinner: currentPlayer,\n\t\t\t\tgameOver: true,\n\t\t\t});\n\n\t\t\t//Stop Timer\n\t\t\ttimer.clearInterval(this);\n\t\t}\n\n\t\tif (fromPosition === 0) {\n\t\t\t// Move only when dice returns 1\n\t\t\tif (dice === 1) {\n\t\t\t\tdispatchMovePlayer(currentPlayer, fromPosition, toPosition);\n\t\t\t} else {\n\t\t\t\t// Try again\n\t\t\t\t// Set next player as current player\n\t\t\t\tthis.setCurrentPlayer();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tdispatchMovePlayer(currentPlayer, fromPosition, toPosition);\n\t\t}\n\n\t\t// Update current player position to toPosition\n\t\tconst copy = players.map((player, index) => {\n\t\t\tif (index === currentPlayerIndex) {\n\t\t\t\tplayer.position = toPosition;\n\t\t\t\treturn player;\n\t\t\t}\n\t\t\treturn player;\n\t\t});\n\n\t\tthis.setState({ players: copy });\n\n\t\t// Set next player as current player\n\t\tthis.setCurrentPlayer();\n\t};\n\n\tgetCurrentPlayer() {\n\t\tconst { players, currentPlayerIndex } = this.state;\n\n\t\t// Return first player\n\t\tif (currentPlayerIndex > players.length - 1) {\n\t\t\treturn players[0];\n\t\t}\n\t\treturn players[currentPlayerIndex];\n\t}\n\n\tsetCurrentPlayer() {\n\t\tconst { players, numberPlayers, currentPlayerIndex } = this.state;\n\t\tif (players.length === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Start Over with player 1\n\t\tif (currentPlayerIndex === players.length - 1) {\n\t\t\tthis.setState({ currentPlayerIndex: 0 });\n\t\t\treturn;\n\t\t}\n\n\t\t// Move to next player\n\t\tthis.setState({ currentPlayerIndex: this.state.currentPlayerIndex + 1 });\n\t}\n\n\tonStart = () => {\n\t\tconst { players, numberPlayers, gameOnGoing } = this.state;\n\t\tconst { dispatchMovePlayerToStart } = this.props;\n\n\t\tif (gameOnGoing) {\n\t\t\tToastAndroid.show(\"A Game is in progress\", ToastAndroid.SHORT);\n\t\t\treturn;\n\t\t}\n\n\t\t// Place all players on Start cell\n\t\tplayers.map((player) => {\n\t\t\tdispatchMovePlayerToStart(player.player, 0, 0);\n\t\t});\n\n\t\t// Red is the first player\n\t\tthis.setState({ playersTurn: RED });\n\n\t\tthis.setState({ gameOnGoing: true });\n\n\t\ttimer.setInterval(\n\t\t\tthis,\n\t\t\t\"displaySeconds\",\n\t\t\t() => {\n\t\t\t\tif (this.state.seconds === 0) {\n\t\t\t\t\t// Player ran out of time\n\t\t\t\t\t// Roll dice explicitly\n\t\t\t\t\tthis.rollDice();\n\t\t\t\t\tthis.setState({ seconds: 5 });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.setState({ seconds: this.state.seconds - 1 });\n\t\t\t},\n\t\t\t1000\n\t\t);\n\t};\n\n\tonReset = () => {\n\t\tconst { dispatchResetPlayers } = this.props;\n\n\t\t// Reset all players\n\t\tdispatchResetPlayers();\n\n\t\tthis.setState({\n\t\t\tdice: 3,\n\t\t\tnumberPlayers: 2,\n\t\t\twinner: \"\",\n\t\t\tplayers: [\n\t\t\t\t{ player: \"red\", position: 0 },\n\t\t\t\t{ player: \"green\", position: 0 },\n\t\t\t],\n\t\t\tcurrentPlayerIndex: 0,\n\t\t\tplayersTurn: \"\",\n\t\t\tseconds: 5,\n\t\t\tgameOnGoing: false,\n\t\t\tgameOver: false,\n\t\t});\n\n\t\ttimer.clearInterval(this);\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t// Show Player's turn arrow\n\t\tif (this.state.currentPlayerIndex !== prevState.currentPlayerIndex) {\n\t\t\tconst currentPlayer = this.getCurrentPlayer();\n\t\t\tthis.setState({ playersTurn: currentPlayer.player });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tplayers,\n\t\t\tdice,\n\t\t\tnumberPlayers,\n\t\t\tplayersTurn,\n\t\t\twinner,\n\t\t\tseconds,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<View style={styles.gameContainer}>\n\t\t\t\t<Header onStart={this.onStart} onReset={this.onReset} />\n\t\t\t\t<View>\n\t\t\t\t\t<View style={styles.numberPlayersContainer}>\n\t\t\t\t\t\t<Text style={styles.numberPlayerTextStyle}>\n\t\t\t\t\t\t\tSelect Number of Players(2-4)\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tstyle={styles.inputStyle}\n\t\t\t\t\t\t\tvalue={numberPlayers.toString()}\n\t\t\t\t\t\t\tonChangeText={(text) => this.onChangePlayerNumbers(text)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.gridContainer}>\n\t\t\t\t\t<Grid />\n\t\t\t\t\t<Timer seconds={seconds} />\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.bottomContainer}>\n\t\t\t\t\t<Players players={players} playersTurn={playersTurn} />\n\t\t\t\t\t{winner !== \"\" && (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={styles.winnerTextStyle}\n\t\t\t\t\t\t>{`Hurray! ${winner.toUpperCase()} is the winner`}</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t<Dice dice={dice} rollDice={this.rollDice} />\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tgameContainer: {\n\t\tflex: 1,\n\t},\n\tgridContainer: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tmargin: 10,\n\t},\n\tbottomContainer: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"space-evenly\",\n\t\twidth: SCREEN_WIDTH,\n\t\tpadding: 25,\n\t},\n\n\tnumberPlayersContainer: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tnumberPlayerTextStyle: {\n\t\tfontSize: 17,\n\t\tmarginRight: 5,\n\t},\n\tinputStyle: {\n\t\theight: 30,\n\t\twidth: 30,\n\t\tborderWidth: 1,\n\t\ttextAlign: \"center\",\n\t},\n\twinnerTextStyle: {\n\t\tfontSize: 20,\n\t\tfontWeight: \"bold\",\n\t},\n});\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tdata: state,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchMovePlayerToStart: (player, fromPosition, toPosition) =>\n\t\t\tdispatch(movePlayerToStart(player, fromPosition, toPosition)),\n\n\t\tdispatchMovePlayer: (player, fromPosition, toPosition) =>\n\t\t\tdispatch(movePlayer(player, fromPosition, toPosition)),\n\n\t\tdispatchResetPlayers: () => dispatch(resetPlayers()),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","export function getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max)) + 1;\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport Game from \"./components/Game\";\n\nexport default function App() {\n\t/* eslint-disable no-underscore-dangle */\n\tconst store = createStore(\n\t\treducer /* preloadedState, */,\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n\t);\n\t/* eslint-enable */\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<StatusBar style=\"auto\" />\n\t\t\t\t<Game />\n\t\t\t</View>\n\t\t</Provider>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t},\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/react-native-snake-ladders/expo-service-worker.js', { scope: '/react-native-snake-ladders/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}